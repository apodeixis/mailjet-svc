/*
Apodeixis mailjet-svc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MessageAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageAllOfAttributes{}

// MessageAllOfAttributes struct for MessageAllOfAttributes
type MessageAllOfAttributes struct {
	Subject string  `json:"subject"`
	Text    *string `json:"text,omitempty"`
	Html    *string `json:"html,omitempty"`
	From    *string `json:"from,omitempty"`
}

type _MessageAllOfAttributes MessageAllOfAttributes

// NewMessageAllOfAttributes instantiates a new MessageAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageAllOfAttributes(subject string) *MessageAllOfAttributes {
	this := MessageAllOfAttributes{}
	this.Subject = subject
	return &this
}

// NewMessageAllOfAttributesWithDefaults instantiates a new MessageAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageAllOfAttributesWithDefaults() *MessageAllOfAttributes {
	this := MessageAllOfAttributes{}
	return &this
}

// GetSubject returns the Subject field value
func (o *MessageAllOfAttributes) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *MessageAllOfAttributes) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *MessageAllOfAttributes) SetSubject(v string) {
	o.Subject = v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MessageAllOfAttributes) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageAllOfAttributes) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MessageAllOfAttributes) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MessageAllOfAttributes) SetText(v string) {
	o.Text = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *MessageAllOfAttributes) GetHtml() string {
	if o == nil || IsNil(o.Html) {
		var ret string
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageAllOfAttributes) GetHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *MessageAllOfAttributes) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given string and assigns it to the Html field.
func (o *MessageAllOfAttributes) SetHtml(v string) {
	o.Html = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *MessageAllOfAttributes) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageAllOfAttributes) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MessageAllOfAttributes) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *MessageAllOfAttributes) SetFrom(v string) {
	o.From = &v
}

func (o MessageAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subject"] = o.Subject
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	return toSerialize, nil
}

func (o *MessageAllOfAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subject",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageAllOfAttributes := _MessageAllOfAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessageAllOfAttributes)

	if err != nil {
		return err
	}

	*o = MessageAllOfAttributes(varMessageAllOfAttributes)

	return err
}

type NullableMessageAllOfAttributes struct {
	value *MessageAllOfAttributes
	isSet bool
}

func (v NullableMessageAllOfAttributes) Get() *MessageAllOfAttributes {
	return v.value
}

func (v *NullableMessageAllOfAttributes) Set(val *MessageAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageAllOfAttributes(val *MessageAllOfAttributes) *NullableMessageAllOfAttributes {
	return &NullableMessageAllOfAttributes{value: val, isSet: true}
}

func (v NullableMessageAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
